{"version":3,"sources":["components/CounterList.tsx","components/Button.ts","components/CounterHeader.tsx","components/CounterFrame.tsx","modules/counterList.ts","container/CounterContainer.tsx","App.tsx","reportWebVitals.ts","modules/index.ts","index.tsx"],"names":["CounterItem","styled","button","props","color","ListDiv","div","CounterList","counters","onIncrease","onDecrease","map","counter","onClick","id","onContextMenu","count","Button","Header","header","CounterHeader","onCreate","onRemove","CounterFrame","CREATE","REMOVE","INCREASE","DECREASE","initalState","Array","counterListReducer","state","action","type","slice","length","connect","console","log","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f4757ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CounterItem = styled.button`\r\n\twidth: 100px;\r\n\theight: 100px;\r\n\tborder-radius: 60px;\r\n\tborder-style: none;\r\n\tmargin: 2rem;\r\n\tbackground-color: ${(props) => props.color};\r\n\tcursor: pointer;\r\n\t&:focus {\r\n\t\toutline: 0;\r\n\t}\r\n\t&:active {\r\n\t\tcolor: white;\r\n\t}\r\n`;\r\nconst ListDiv = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-around;\r\n\tflex-flow: row wrap;\r\n`;\r\n\r\nexport type CounterInfo = {\r\n\tcount: number;\r\n\tid: number;\r\n};\r\nexport type CounterListProps = {\r\n\tcounters: CounterInfo[];\r\n\tonIncrease: (id: number) => void;\r\n\tonDecrease: (id: number) => void;\r\n};\r\n\r\nexport default function CounterList({\r\n\tcounters,\r\n\tonIncrease,\r\n\tonDecrease,\r\n}: CounterListProps) {\r\n\treturn (\r\n\t\t<ListDiv>\r\n\t\t\t{counters &&\r\n\t\t\t\tcounters.map((counter) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<CounterItem\r\n\t\t\t\t\t\t\tkey={counter.id + ':counter'}\r\n\t\t\t\t\t\t\tonClick={() => onIncrease(counter.id)}\r\n\t\t\t\t\t\t\tonContextMenu={() => onDecrease(counter.id)}\r\n\t\t\t\t\t\t\tcolor={`rgba(\r\n\t\t\t\t\t\t\t\t${counter.count * 10},\r\n\t\t\t\t\t\t\t\t${counter.count * 20},\r\n\t\t\t\t\t\t\t\t${counter.count * 30},\r\n\t\t\t\t\t\t\t\t1)`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{counter.count}\r\n\t\t\t\t\t\t</CounterItem>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</ListDiv>\r\n\t);\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    width:3rem;\r\n    height:2rem;\r\n    border:none;\r\n    border-radius:0.5rem;\r\n    color:white;\r\n    margin:1rem;\r\n    &:active{\r\n        border:none;\r\n    }\r\n    background-color:${props => props.color};\r\n`;\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst Header = styled.header`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n`;\r\n\r\ntype CounterHeaderProps = {\r\n\tonCreate: () => void;\r\n\tonRemove: () => void;\r\n};\r\nexport default function CounterHeader({\r\n\tonCreate,\r\n\tonRemove,\r\n}: CounterHeaderProps) {\r\n\treturn (\r\n\t\t<Header>\r\n\t\t\t<Button color=\"green\" onClick={onCreate}>\r\n\t\t\t\t생성\r\n\t\t\t</Button>\r\n\t\t\t<Button color=\"red\" onClick={onRemove}>\r\n\t\t\t\t삭제\r\n\t\t\t</Button>\r\n\t\t</Header>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport CounterList, { CounterInfo } from './CounterList';\r\nimport CounterHeader from './CounterHeader';\r\n\r\nexport type CounterProps = {\r\n\tcounters: CounterInfo[];\r\n\tonCreate: () => void;\r\n\tonRemove: () => void;\r\n\tonIncrease: (id: number) => void;\r\n\tonDecrease: (id: number) => void;\r\n};\r\n\r\nexport default function CounterFrame({\r\n\tcounters,\r\n\tonCreate,\r\n\tonRemove,\r\n\tonIncrease,\r\n\tonDecrease,\r\n}: CounterProps) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CounterHeader onCreate={onCreate} onRemove={onRemove} />\r\n\t\t\t<CounterList\r\n\t\t\t\tcounters={counters}\r\n\t\t\t\tonIncrease={onIncrease}\r\n\t\t\t\tonDecrease={onDecrease}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { CounterInfo } from \"../components/CounterList\";\r\n\r\nconst CREATE = 'counterList/CREATE' as const;\r\nconst REMOVE = 'counterList/REMOVE' as const;\r\nconst INCREASE = 'counterList/INCREASE' as const;\r\nconst DECREASE = 'counterList/DECREASE' as const;\r\n\r\nlet id: number = 0;\r\nexport const onCreate = () => ({\r\n    type: CREATE\r\n});\r\nexport const onRemove = () => ({\r\n    type: REMOVE,\r\n});\r\nexport const onIncrease = (id: number) => ({\r\n    type: INCREASE,\r\n    id: id\r\n});\r\nexport const onDecrease = (id: number) => ({\r\n    type: DECREASE,\r\n    id: id\r\n});\r\n\r\ntype CounterListAction =\r\n    | ReturnType<typeof onCreate>\r\n    | ReturnType<typeof onRemove>\r\n    | ReturnType<typeof onIncrease>\r\n    | ReturnType<typeof onDecrease>\r\n\r\ntype CounterListState = {\r\n    counters: CounterInfo[];\r\n}\r\n\r\nconst initalState: CounterListState = {\r\n    counters: new Array<CounterInfo>(0)\r\n}\r\n\r\nconst counterListReducer = (state: CounterListState = initalState, action: CounterListAction) => {\r\n    let newState: CounterListState;\r\n    switch (action.type) {\r\n        case CREATE:\r\n            newState = {\r\n                ...state,\r\n                counters: [\r\n\r\n                    ...state.counters,\r\n                    {\r\n                        count: 0,\r\n                        id: id++\r\n                    },\r\n                ]\r\n            }\r\n            return newState;\r\n        case REMOVE:\r\n            newState = {\r\n                ...state,\r\n                counters: state.counters.slice(0, state.counters.length - 1)\r\n            }\r\n            return newState;\r\n        case INCREASE:\r\n            newState = {\r\n                ...state,\r\n                counters: state.counters.map((counter) => (counter.id === action.id) ? { ...counter, count: counter.count + 1 } : counter)\r\n            }\r\n            return newState;\r\n        case DECREASE:\r\n            newState = {\r\n                ...state,\r\n                counters: state.counters.map((counter) => (counter.id === action.id) ? { ...counter, count: counter.count - 1 } : counter)\r\n            }\r\n            return newState;\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n};\r\n\r\nexport default counterListReducer;","import React from 'react';\r\nimport CounterFrame, { CounterProps } from '../components/CounterFrame';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n\tonCreate,\r\n\tonRemove,\r\n\tonIncrease,\r\n\tonDecrease,\r\n} from '../modules/counterList';\r\nimport { GlobalStates } from '../modules';\r\nfunction CounterContainer({\r\n\tcounters,\r\n\tonCreate,\r\n\tonRemove,\r\n\tonIncrease,\r\n\tonDecrease,\r\n}: CounterProps) {\r\n\tconsole.log(counters);\r\n\treturn (\r\n\t\t<CounterFrame\r\n\t\t\tcounters={counters}\r\n\t\t\tonCreate={onCreate}\r\n\t\t\tonRemove={onRemove}\r\n\t\t\tonIncrease={onIncrease}\r\n\t\t\tonDecrease={onDecrease}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalStates) => ({\r\n\tcounters: state.counterListReducer.counters,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n\tonCreate,\r\n\tonRemove,\r\n\tonIncrease,\r\n\tonDecrease,\r\n})(CounterContainer);\r\n","import CounterContainer from './container/CounterContainer';\n\nfunction App() {\n\treturn (\n\t\t<section className=\"App\">\n\t\t\t<section>\n\t\t\t\t<CounterContainer />\n\t\t\t</section>\n\t\t</section>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport counterListReducer from './counterList';\r\n\r\n\r\nconst rootReducer = combineReducers({ counterListReducer });\r\nexport type GlobalStates = | ReturnType<typeof rootReducer>\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './reset.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './modules';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\nreportWebVitals();\n"],"sourceRoot":""}